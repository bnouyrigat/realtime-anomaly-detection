package bnouyrigat.h2o;


import bnouyrigat.h2o.mlmodel.DeepAutoEncoderAnomaly;
import bnouyrigat.h2o.mlmodel.DeepAutoEncoderModel;

import java.util.Arrays;

public class DetectionMain {

    public static void main(String[] args) {
        DeepAutoEncoderModel deepAutoEncoderModel = new DeepAutoEncoderModel();
        DeepAutoEncoderAnomaly deepAutoEncoderAnomaly = new DeepAutoEncoderAnomaly(deepAutoEncoderModel);

        String anomaly = "5.16,5.15,5.14,5.14,5.16,5.17,5.15,5.14,5.13,5.13,5.11,5.10,5.10,5.10,5.11,5.09,5.08,5.09," +
                "5.08,5.07,5.06,5.06,5.05,5.04,5.03,5.04,5.04,5.03,5.02,5.02,5.03,5.02,5.01,5.01,5.02,5.01,5.01,5.01," +
                "5.02,5.02,5.01,5.00,5.02,5.01,5.00,5.00,5.01,5.01,5.01,5.00,5.01,5.03,5.03,5.04,5.19,5.27,5.91,5.62," +
                "5.41,5.37,5.32,5.25,5.16,5.03,4.80,4.46,4.08,3.72,3.33,2.96,2.72,2.58,2.47,2.37,2.26,2.18,2.14,2.11," +
                "2.08,2.07,2.08,2.07,2.06,2.07,2.12,2.19,2.28,2.44,2.65,2.87,3.15,3.51,3.85,4.14,4.43,4.72,4.98,5.18," +
                "5.35,5.52,5.69,5.78,5.83,5.88,5.94,5.96,6.03,6.06,6.10,6.16,6.19,6.23,6.26,6.32,6.37,6.40,6.44,6.50," +
                "6.54,6.58,6.63,6.70,6.73,6.76,6.81,6.86,6.91,6.93,6.95,6.98,6.99,7.01,7.02,7.03,7.02,7.00,6.96,6.92," +
                "6.88,6.82,6.74,6.67,6.60,6.52,6.42,6.34,6.27,6.16,6.08,6.00,5.92,5.87,5.78,5.70,5.65,5.63,5.53,5.47," +
                "5.43,5.40,5.35,5.32,5.29,5.27,5.24,5.20,5.19,5.19,5.18,5.15,5.13,5.13,5.13,5.11,5.10,5.10,5.11,5.10," +
                "5.08,5.10,5.10,5.10,5.07,5.08,5.09,5.09,5.08,5.08,5.09,5.09,5.10,5.10,5.10,5.10,5.08,5.07,5.09,5.08," +
                "5.08,5.07,5.07,5.08,5.07,5.06,5.05,5.05,5.06,5.04,5.03,5.03";
        String data = "2.10,2.13,2.19,2.28,2.44,2.62,2.80,3.04,3.36,3.69,3.97,4.24,4.53,4.80,5.02,5.21,5.40,5.57,5.71," +
                "5.79,5.86,5.92,5.98,6.02,6.06,6.08,6.14,6.18,6.22,6.27,6.32,6.35,6.38,6.45,6.49,6.53,6.57,6.64,6.70," +
                "6.73,6.78,6.83,6.88,6.92,6.94,6.98,7.01,7.03,7.05,7.06,7.07,7.08,7.06,7.04,7.03,6.99,6.94,6.88,6.83," +
                "6.77,6.69,6.60,6.53,6.45,6.36,6.27,6.19,6.11,6.03,5.94,5.88,5.81,5.75,5.68,5.62,5.61,5.54,5.49,5.45," +
                "5.42,5.38,5.34,5.31,5.30,5.29,5.26,5.23,5.23,5.22,5.20,5.19,5.18,5.19,5.17,5.15,5.14,5.17,5.16,5.15," +
                "5.15,5.15,5.14,5.14,5.14,5.15,5.14,5.14,5.13,5.15,5.15,5.15,5.14,5.16,5.15,5.15,5.14,5.14,5.15,5.15," +
                "5.14,5.13,5.14,5.14,5.11,5.12,5.12,5.12,5.09,5.09,5.09,5.10,5.08,5.08,5.08,5.08,5.06,5.05,5.06,5.07," +
                "5.05,5.03,5.03,5.04,5.03,5.01,5.01,5.02,5.01,5.01,5.00,5.00,5.02,5.01,4.98,5.00,5.00,5.00,4.99,5.00," +
                "5.01,5.02,5.01,5.03,5.03,5.02,5.02,5.04,5.04,5.04,5.02,5.02,5.01,4.99,4.98,4.96,4.96,4.96,4.94,4.93," +
                "4.93,4.93,4.93,4.93,5.02,5.27,5.80,5.94,5.58,5.39,5.32,5.25,5.21,5.13,4.97,4.71,4.39,4.05,3.69,3.32," +
                "3.05,2.99,2.74,2.61,2.47,2.35,2.26,2.20,2.15,2.10,2.08";
        String data1 = "1.99244940155669,2.0129712362435,2.02486490787872,2.07329725094836,2.16811172840133,2.33779842746265,2.53135751516167,2.69020850827528,2.90461302656239,3.25884664218352,3.48972465408788,3.81305075479516,4.16231177588959,4.44548000869648,4.66092314196045,4.95066334069536,5.20785573866204,5.37110096489389,5.5586330537483,5.73738654162283,5.81667811663668,5.87387776713437,6.0053973645867,6.054558299738,6.09563767905653,6.08430364896769,6.1403377539189,6.21418900119184,6.25010433155821,6.30730350345263,6.32635030590084,6.37276545718202,6.40248318654011,6.45435223797497,6.48852562736426,6.50594963065753,6.55716091745169,6.61197388862371,6.6433303974046,6.7082341021301,6.70802482027854,6.78928606718352,6.85590392512594,6.76746117197892,6.88883597621012,6.8893942462764,6.96398197120918,6.94372540231232,6.95164883773487,7.02315036421121,7.01470180470244,7.00133182503555,7.0357685925543,6.99228563849304,7.00541137141881,6.98580551962677,6.95474336404258,6.88682976418639,6.85021844485795,6.77840977351819,6.71217776309262,6.68430707859342,6.58926770544563,6.48241076550011,6.40642657827154,6.34589544640653,6.24522078285414,6.17511495014483,6.07397116489124,6.04227208864359,5.93151011231472,5.85519393622553,5.78315363173851,5.69298544742855,5.65341419897597,5.59964978741999,5.55175224352613,5.50131628449966,5.45354011358831,5.42152821536325,5.36116783612471,5.34498653473607,5.30634841865948,5.28377846320842,5.26741973246301,5.24158437041963,5.24022757389742,5.22076456011087,5.21161675328129,5.20497119529173,5.19075604037008,5.19138391181053,5.18596697043001,5.16758116598393,5.17079318270767,5.15543205503323,5.16797683843637,5.15439547861269,5.16222497221748,5.15254688625751,5.14836433603629,5.14052593084441,5.14989394146432,5.1445411145429,5.14725746789334,5.1418888362121,5.14442227771055,5.14155293096843,5.15019335257692,5.14379574324004,5.14510308495719,5.14617167387157,5.14841938167911,5.14092210436225,5.14093468416304,5.13155684196819,5.14097571779609,5.13422039808619,5.13467024531537,5.13383625148392,5.12208559330439,5.12560369498699,5.12027013330145,5.10672680906264,5.10815137793413,5.10797496109012,5.09884085446658,5.08836862013779,5.08189744789779,5.08821643452706,5.07570082842382,5.04200703769605,5.06754560568648,5.06832608810436,5.06774064619211,5.05520196830171,5.03233339676773,5.00838628420624,4.94736399019496,4.91798994068985,4.97313800078077,4.99055404177849,4.98373871225298,5.06085592009843,5.00845195669089,4.98078845162946,5.09800396344455,5.03515903920555,5.08080706812766,5.11580654624978,5.06361157743616,5.11736989943984,5.18026482634444,5.16549975655285,5.09450669106623,5.1039818990365,5.21126511955146,5.05382845328907,5.06535311326729,5.07720228771899,5.04690048523041,5.04522986188252,4.92532403581624,5.04870004308154,4.9930138974088,4.89039095423334,4.94336608018472,4.94633108943481,4.96526195976708,4.9462953401643,4.94052093652443,4.92422285230406,4.9225196252303,5.06143021615481,5.04766155567347,5.10710962934711,5.06244021513107,5.04644624851139,5.02069016075479,4.99961749648986,5.02869600938505,5.02912888655297,5.03511988061217,5.14816559480676,5.14592540445265,5.37919585913191,5.28382211694532,5.17453738478736,5.15038774733157,5.17396922885942,5.0789496093882,4.85007019736856,4.61539568523812,4.51938500407698,4.21234479951077,4.00550450478931,3.82674819630884,3.56349602006993,3.25386931321986,2.94573412627785,2.89814315271072,2.61895722535384,2.68193112247686,2.46200572478513,2.39951656014212,2.24419394045505,2.20257545555132,2.22407478109453,2.21742899005831,2.2340762951504";
        double[] actual = toDoubleArray(anomaly);

//        double[] preds = new double[210];
//        deepAutoEncoderModel.score0(actual, preds);
//        System.out.printf("PREDICTION: %s%n", Arrays.toString(preds));

        double mse = deepAutoEncoderAnomaly.scoreAutoEncoder(actual);
        System.err.println("MSE: " + mse);

    }

    public static double[] toDoubleArray(String data) {
        return Arrays.stream(data.split(","))
                .mapToDouble(Double::parseDouble)
                .toArray();
    }

}
